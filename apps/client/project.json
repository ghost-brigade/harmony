{
  "name": "client",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "sourceRoot": "apps/client/src",
  "prefix": "harmony",
  "targets": {
    "build": {
      "executor": "@angular-devkit/build-angular:browser",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/apps/client",
        "index": "apps/client/src/index.html",
        "main": "apps/client/src/main.ts",
        "polyfills": ["zone.js"],
        "tsConfig": "apps/client/tsconfig.app.json",
        "assets": [
          "apps/client/src/favicon.svg",
          "apps/client/src/favicon.png",
          "apps/client/src/assets"
        ],
        "styles": [
          "apps/client/src/styles.css",
          "node_modules/prismjs/themes/prism-okaidia.css"
        ],
        "scripts": [
          "node_modules/marked/marked.min.js",
          "node_modules/prismjs/prism.js",
          "node_modules/prismjs/components/prism-bash.min.js",
          "node_modules/prismjs/components/prism-batch.min.js",
          "node_modules/prismjs/components/prism-c.min.js",
          "node_modules/prismjs/components/prism-clojure.min.js",
          "node_modules/prismjs/components/prism-cpp.min.js",
          "node_modules/prismjs/components/prism-csharp.min.js",
          "node_modules/prismjs/components/prism-css.min.js",
          "node_modules/prismjs/components/prism-fsharp.min.js",
          "node_modules/prismjs/components/prism-go.min.js",
          "node_modules/prismjs/components/prism-http.min.js",
          "node_modules/prismjs/components/prism-java.min.js",
          "node_modules/prismjs/components/prism-javascript.min.js",
          "node_modules/prismjs/components/prism-json.min.js",
          "node_modules/prismjs/components/prism-markdown.min.js",
          "node_modules/prismjs/components/prism-rust.min.js",
          "node_modules/prismjs/components/prism-scss.min.js",
          "node_modules/prismjs/components/prism-typescript.min.js",
          "node_modules/prismjs/components/prism-xml-doc.min.js",
          "node_modules/prismjs/components/prism-yaml.min.js"
        ]
      },
      "configurations": {
        "production": {
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "2mb",
              "maximumError": "5mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "50kb",
              "maximumError": "100kb"
            }
          ],
          "outputHashing": "all"
        },
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "vendorChunk": true,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true
        }
      },
      "defaultConfiguration": "production"
    },
    "serve": {
      "executor": "@angular-devkit/build-angular:dev-server",
      "configurations": {
        "production": {
          "browserTarget": "client:build:production"
        },
        "development": {
          "browserTarget": "client:build:development"
        }
      },
      "defaultConfiguration": "development"
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "browserTarget": "client:build"
      }
    },
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["apps/client/**/*.ts", "apps/client/**/*.html"]
      }
    },
    "test": {
      "executor": "@nrwl/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "apps/client/jest.config.ts",
        "passWithNoTests": true
      },
      "configurations": {
        "ci": {
          "ci": true,
          "codeCoverage": true
        }
      }
    },
    "container": {
      "executor": "@nx-tools/nx-container:build",
      "dependsOn": ["build"],
      "options": {
        "engine": "docker",
        "platforms": ["linux/amd64", "linux/arm64"],
        "buildArgs": {},
        "metadata": {
          "images": [
            "europe-west9-docker.pkg.dev/harmony-383520/harmony/harmony-client"
          ],
          "load": true,
          "tags": [
            "type=raw,value=stable,enable={{is_default_branch}}",
            "type=raw,value=latest",
            "type=sha,prefix=sha-"
          ]
        },
        "push": true,
        "cache-from": ["type=gha"],
        "cache-to": ["type=gha,mode=max"]
      }
    }
  },
  "tags": []
}
